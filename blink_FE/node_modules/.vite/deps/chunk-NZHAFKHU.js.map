{
  "version": 3,
  "sources": ["../../@mui/joy/styles/CssVarsProvider.js"],
  "sourcesContent": ["'use client';\r\n\r\nimport { deepmerge } from '@mui/utils';\r\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\r\nimport defaultTheme from './defaultTheme';\r\nimport { createSoftInversion, createSolidInversion } from './variantUtils';\r\nimport THEME_ID from './identifier';\r\nconst {\r\n  CssVarsProvider,\r\n  useColorScheme,\r\n  getInitColorSchemeScript\r\n} = createCssVarsProvider({\r\n  themeId: THEME_ID,\r\n  theme: defaultTheme,\r\n  attribute: 'data-joy-color-scheme',\r\n  modeStorageKey: 'joy-mode',\r\n  colorSchemeStorageKey: 'joy-color-scheme',\r\n  defaultColorScheme: {\r\n    light: 'light',\r\n    dark: 'dark'\r\n  },\r\n  resolveTheme: mergedTheme => {\r\n    const colorInversionInput = mergedTheme.colorInversion;\r\n    mergedTheme.colorInversion = deepmerge({\r\n      soft: createSoftInversion(mergedTheme),\r\n      solid: createSolidInversion(mergedTheme)\r\n    }, typeof colorInversionInput === 'function' ? colorInversionInput(mergedTheme) : colorInversionInput, {\r\n      clone: false\r\n    });\r\n    return mergedTheme;\r\n  }\r\n});\r\nexport { CssVarsProvider, useColorScheme, getInitColorSchemeScript };"],
  "mappings": ";;;;;;;;;;AAOA,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA;AACF,IAAI,sBAAsB;AAAA,EACxB,SAAS;AAAA,EACT,OAAO;AAAA,EACP,WAAW;AAAA,EACX,gBAAgB;AAAA,EAChB,uBAAuB;AAAA,EACvB,oBAAoB;AAAA,IAClB,OAAO;AAAA,IACP,MAAM;AAAA,EACR;AAAA,EACA,cAAc,iBAAe;AAC3B,UAAM,sBAAsB,YAAY;AACxC,gBAAY,iBAAiB,UAAU;AAAA,MACrC,MAAM,oBAAoB,WAAW;AAAA,MACrC,OAAO,qBAAqB,WAAW;AAAA,IACzC,GAAG,OAAO,wBAAwB,aAAa,oBAAoB,WAAW,IAAI,qBAAqB;AAAA,MACrG,OAAO;AAAA,IACT,CAAC;AACD,WAAO;AAAA,EACT;AACF,CAAC;",
  "names": []
}
